<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gangdian.qc.dao.QCRoleDao" >
  <resultMap id="BaseResultMap" type="com.gangdian.qc.model.QCRole" >
    <result column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="NVARCHAR" />
    <result column="permissionID" property="permissionID" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="roleAndUser" type="com.gangdian.qc.model.QCRole" >
    <result column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="NVARCHAR" />
    <result column="permissionID" property="permissionID" jdbcType="INTEGER" />
    <collection property="user2Role" column="role_id" javaType="User2Role" >
 			<result column="user_id" property="userId" jdbcType="NVARCHAR" />
   			 <result column="role_id" property="roleId" jdbcType="INTEGER" />
			
	</collection>
  </resultMap>
 
  <resultMap id="roleAndPermission" type="com.gangdian.qc.model.QCRole" >
    <result column="r_id" property="id" jdbcType="INTEGER" />
    <result column="r_name" property="name" jdbcType="NVARCHAR" />
    <!-- <collection property="addressList" column="id" select="com.gangdian.qc.model..selectByPrimaryKey"/>
     -->
    <collection  property="permissionList" column="id"   javaType="List" ofType="com.gangdian.qc.model.QCPermission" >
 			<id column="p_id" property="id" />
			<result column="p_name" property="name" jdbcType="NVARCHAR" />
		    <result column="fatherid" property="fatherid" jdbcType="INTEGER" />
		    <result column="url" property="url" jdbcType="NVARCHAR" />
	</collection > 
  </resultMap>
 
  <select id="roleGetUser" resultMap="roleAndUser" parameterType="Integer">
		select r.name ,r.id,user_id,role_id
		from qc_role r 
		left join User_Role   on r.id=role_id 
		where r.id=#{id}
		
	</select>
 <select id="roleGetPermission" resultMap="roleAndPermission" parameterType="Integer">
		select r.name r_name,r.id r_id,p.id p_id,p.name p_name ,fatherid,url
		from qc_role r 
		left join qc_permission p   on r.permissionID=p.id 
		where r.id=#{id}
	
	</select>
  <insert id="insert" parameterType="com.gangdian.qc.model.QCRole" >
    insert into qc_role (id, name, permissionID
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=NVARCHAR}, #{permissionID,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.gangdian.qc.model.QCRole" >
    insert into qc_role
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="permissionID != null" >
        permissionID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=NVARCHAR},
      </if>
      <if test="permissionID != null" >
        #{permissionID,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
    
    
  <insert id="addRole" parameterType="com.gangdian.qc.model.QCRole">
      insert into qc_role(id, name, permissionID) values 
      (#{id,jdbcType=INTEGER}, #{name,jdbcType=NVARCHAR}, #{permissionID,jdbcType=INTEGER})
  </insert>
  <delete id="deleteRole" parameterType="com.gangdian.qc.model.QCRole">
       delete from qc_role where id=#{id,jdbcType=INTEGER} and name=#{name,jdbcType=NVARCHAR}  
  </delete>
  <!-- <update id="updateRole" parameterType="com.gangdian.qc.model.QCRole">
       update qc_role set id=#{record.id,jdbcType=INTEGER},name=#{record.name,jdbcType=NVARCHAR},
              permissionID=#{record.permissionID,jdbcType=INTEGER} where id=#{Roleid,jdbcType=INTEGER}
              and name=#{Rolename,jdbcType=NVARCHAR} and permissionID= #{RolepermissionID,jdbcType=INTEGER}
  </update> -->
  <update id="updateRole" parameterType="com.gangdian.qc.model.QCRole">
       update qc_role set id=#{record.id,jdbcType=INTEGER},name=#{record.name,jdbcType=NVARCHAR}
       where id=#{Roleid,jdbcType=INTEGER}  and name=#{Rolename,jdbcType=NVARCHAR} 
  </update>
  <select id="getAllRole" resultType="com.gangdian.qc.model.QCRole">
       select id,name from qc_role group by id,name 
  </select>
  <select id="checkRole" parameterType="com.gangdian.qc.model.QCRole" resultType="com.gangdian.qc.model.QCRole">
       select * from qc_role  where   1=1
       <if test="id != null"> and id=#{id,jdbcType=INTEGER}</if>
       <if test="name != null and name != ''"> and name=#{name,jdbcType=NVARCHAR}</if>
       <if test="permissionID != null and permissionID !=''"> and permissionID= #{permissionID,jdbcType=INTEGER}</if> 
  </select>
  <select id="getRolePageSize" parameterType="com.gangdian.qc.model.QCRole" resultType="com.gangdian.qc.model.QCRole">
       select id,name from qc_role where 1=1
       <if test="id != null"> and id=#{id,jdbcType=INTEGER}</if>
       <if test="name != null and name != ''"> and name=#{name,jdbcType=NVARCHAR}</if>
       <if test="permissionID != null and permissionID !=''"> and permissionID= #{permissionID,jdbcType=INTEGER}</if>
       group by id,name
  </select>
  <select id="getRolePageList" resultType="com.gangdian.qc.model.QCRole">
         select id,name from
         (select ROW_NUMBER() over (order by
         <if test="sort != null and sort != '' and order != null and order != ''">${sort} ${order},</if>
         id) as RowNum,id,name from qc_role where 1=1
         <if test="record != null ">
         <if test="record.id != null"> and id=#{record.id,jdbcType=INTEGER}</if>
         <if test="record.name != null and record.name != ''"> and name=#{record.name,jdbcType=NVARCHAR}</if>
         <if test="record.permissionID != null and record.permissionID !=''"> and permissionID= #{record.permissionID,jdbcType=INTEGER}</if>
         </if>
         group by id,name) as temp
         <if test="rows != null and page != null">
         where RowNum between (#{page,jdbcType=INTEGER}-1)*#{rows,jdbcType=INTEGER}+1 and #{page,jdbcType=INTEGER}*#{rows,jdbcType=INTEGER}
         </if>
         
  </select>
  
  <select id="getPermissionID" resultType="int">
         select permissionID from qc_role where id=#{id,jdbcType=INTEGER} and name=#{name,jdbcType=NVARCHAR}
  </select>
  <select id="getPremissionByRoleId" resultType="java.util.HashMap">
select p.id,p.name,p.fatherid,p.url from qc_permission p left join qc_role r on r.permissionID=p.id
where r.id=#{rid,jdbcType=INTEGER}
group by p.id,p.name,p.fatherid,p.url
</select>
  
  
  
  
<!--   <select id="roleGetPermission"  resultType="com.gangdian.qc.model.QCRole">
         select * from qc_role where id=#{id,jdbcType=INTEGER}
  </select> -->
</mapper>