<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gangdian.qc.dao.QCWorkerDetailDao" >
  <resultMap id="BaseResultMap" type="com.gangdian.qc.model.QCWorkerDetail" >
    <result column="id" property="id" jdbcType="INTEGER" />
    <result column="parent_id" property="parentId" jdbcType="INTEGER" />
    <result column="hourPeriod" property="hourperiod" jdbcType="NVARCHAR" />
    <result column="worker_amount" property="workerAmount" jdbcType="INTEGER" />
    <result column="get_workers" property="getWorkers" jdbcType="INTEGER" />
    <result column="get_workers_group" property="getWorkersGroup" jdbcType="NVARCHAR" />
    <result column="get_workers_m" property="getWorkersM" jdbcType="INTEGER" />
    <result column="borrow_workers" property="borrowWorkers" jdbcType="INTEGER" />
    <result column="borrow_workers_group" property="borrowWorkersGroup" jdbcType="NVARCHAR" />
    <result column="borrow_workers_m" property="borrowWorkersM" jdbcType="INTEGER" />
    <result column="work_minute" property="workMinute" jdbcType="INTEGER" />
    <result column="packageNum" property="packageNum" jdbcType="INTEGER" />
    <result column="standardProduct" property="standardProduct" jdbcType="INTEGER" />
  </resultMap>
  
    	
  <sql id="Base_Column_List" >
   id, parent_id, hourPeriod, 
      worker_amount, get_workers, get_workers_group, standardProduct,
      borrow_workers, borrow_workers_group,work_minute,borrow_workers_m,
      get_workers_m,packageNum
  </sql>
 <select id="selectByParentId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
   <include refid="Base_Column_List" />
    from qc_worker_detail
    where parent_id = #{parentId,jdbcType=INTEGER}
  </select>
  <!-- 获取当前组别所有的人员调动情况按时间段汇总 
  -->
 <select id="selectBySumGroup" resultMap="BaseResultMap" parameterType="INTEGER" >
 	select   hourPeriod
 			,sum(worker_amount*work_minute) as worker_amount
 			,sum(get_workers*get_workers_m) as get_workers
 			,sum(qc_worker_detail.standardProduct) as standardProduct
 			,sum(borrow_workers*borrow_workers_m) as borrow_workers  
 			,sum(packageNum) packageNum
 			,max(borrow_workers_group) as borrow_workers_group
 			,max(get_workers_group) as get_workers_group 
 	from  qc_worker_detail 
 		  left join  product_main on product_main.id=parent_id 
	where productDate= convert(varchar, getdate(),23) 
	and   groupid= #{groupid,jdbcType=INTEGER}
	 <if test="id!=null and id!=''">
	and product_main.id=#{id,jdbcType=INTEGER}
	</if> 
	 <if test="progress!=null and progress!=''">
	and product_main.progress=#{progress,jdbcType=INTEGER}
	</if> 
	group by   hourPeriod
	order by cast   (hourPeriod   as   int) 
  </select>
  <!-- 获取当前组别所有的人员调动情况 -->
 <select id="selectByGroup" resultMap="BaseResultMap" parameterType="INTEGER" >
	 select  hourPeriod,work_minute,worker_amount
	 		 ,get_workers_m,get_workers
			 ,borrow_workers_m , borrow_workers  
			 ,packageNum,  borrow_workers_group
			 ,get_workers_group 
 	from  qc_worker_detail left join  product_main 
 	on   product_main.id=parent_id 
	where productDate= convert(varchar, getdate(),23) 
	and groupid= #{groupid,jdbcType=INTEGER} 
	order by cast   (hourPeriod   as   int)
  </select>
  
  <insert id="insert" parameterType="com.gangdian.qc.model.QCWorkerDetail" >
    insert into qc_worker_detail 
    	   ( parent_id, hourPeriod, 
		      worker_amount, get_workers,
		      get_workers_group, 
		      borrow_workers, borrow_workers_group,
		      work_minute,packageNum,borrow_workers_m,
		      get_workers_m,standardProduct)
    values ( #{parentId,jdbcType=INTEGER},
    		 #{hourperiod,jdbcType=NVARCHAR}, 
    		 0, 0, '', 0, '',0,0,0,0,0)
  </insert>
  <insert id="insertSelective" parameterType="com.gangdian.qc.model.QCWorkerDetail" >
    insert into qc_worker_detail
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="parentId != null" >
        parent_id,
      </if>
      <if test="hourperiod != null" >
        hourPeriod,
      </if>
      <if test="workerAmount != null" >
        worker_amount,
      </if>
      <if test="getWorkers != null" >
        get_workers,
      </if>
      <if test="getWorkersGroup != null" >
        get_workers_group,
      </if>
      <if test="borrowWorkers != null" >
        borrow_workers,
      </if>
      <if test="borrowWorkersGroup != null" >
        borrow_workers_group,
      </if>
      <if test="workMinute != null" >
        work_minute,
      </if>
      <if test="packageNum != null" >
        packageNum,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="parentId != null" >
        #{parentId,jdbcType=INTEGER},
      </if>
      <if test="hourperiod != null" >
        #{hourperiod,jdbcType=NVARCHAR},
      </if>
      <if test="workerAmount != null" >
        #{workerAmount,jdbcType=INTEGER},
      </if>
      <if test="getWorkers != null" >
        #{getWorkers,jdbcType=INTEGER},
      </if>
      <if test="getWorkersGroup != null" >
        #{getWorkersGroup,jdbcType=NVARCHAR},
      </if>
      <if test="borrowWorkers != null" >
        #{borrowWorkers,jdbcType=INTEGER},
      </if>
      <if test="borrowWorkersGroup != null" >
        #{borrowWorkersGroup,jdbcType=NVARCHAR},
      </if>
      <if test="workMinute != null" >
        #{workMinute,jdbcType=INTEGER},
      </if>
      <if test="packageNum != null" >
        #{packageNum,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  
  <update id="updateByPrimaryKeySelective"  parameterType="map">
    update qc_worker_detail
    <set >
   	  <if test="record != null" >
      <if test="record.workerAmount != null" >
        worker_amount = #{record.workerAmount,jdbcType=INTEGER},
      </if>
      <if test="record.getWorkers != null" >
        get_workers = #{record.getWorkers,jdbcType=INTEGER},
      </if>
      <if test="record.getWorkersGroup != null" >
        get_workers_group = #{record.getWorkersGroup,jdbcType=NVARCHAR},
      </if>
      <if test="record.borrowWorkers != null" >
        borrow_workers = #{record.borrowWorkers,jdbcType=INTEGER},
      </if>
      <if test="record.borrowWorkersGroup != null" >
        borrow_workers_group = #{record.borrowWorkersGroup,jdbcType=NVARCHAR},
      </if>
      <if test="record.workMinute != null" >
        work_minute = #{record.workMinute,jdbcType=INTEGER},
      </if>
      <if test="record.borrowWorkersM != null" >
        borrow_workers_m = #{record.borrowWorkersM,jdbcType=INTEGER},
      </if>
      <if test="record.getWorkersM != null" >
        get_workers_m = #{record.getWorkersM,jdbcType=INTEGER},
      </if>
      <if test="record.packageNum != null" >
        packageNum = #{record.packageNum,jdbcType=INTEGER},
      </if>
      <if test="record.standardProduct != null" >
        standardProduct = #{record.standardProduct,jdbcType=INTEGER},
      </if>
      </if>
    </set>
    where parent_id = #{record.parentId,jdbcType=INTEGER}
    and hourPeriod in 
    			<foreach item="item" index="index" collection="period" 
                         open="(" separator="," close=")">
                        #{item}
                </foreach>
  </update>
  
  <update id="updateByPrimaryKey" parameterType="com.gangdian.qc.model.QCWorkerDetail" >
    update qc_worker_detail
    set   worker_amount = #{workerAmount,jdbcType=INTEGER},
       get_workers = #{getWorkers,jdbcType=INTEGER},
       get_workers_group = #{getWorkersGroup,jdbcType=NVARCHAR},
       borrow_workers = #{borrowWorkers,jdbcType=INTEGER},
       borrow_workers_group = #{borrowWorkersGroup,jdbcType=NVARCHAR},
       work_minute = #{workMinute,jdbcType=INTEGER},
       borrow_workers_m = #{borrowWorkersM,jdbcType=INTEGER}, 
       get_workers_m = #{getWorkersM,jdbcType=INTEGER},
       packageNum = #{packageNum,jdbcType=INTEGER},
       standardProduct = #{standardProduct,jdbcType=INTEGER}
     where parent_id = #{parentId,jdbcType=INTEGER}
    and hourPeriod=#{hourperiod,jdbcType=NVARCHAR}
    
  </update>
</mapper>