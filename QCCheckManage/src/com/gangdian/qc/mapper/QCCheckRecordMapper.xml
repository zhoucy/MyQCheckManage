<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gangdian.qc.dao.QCCheckRecordDao">
  <resultMap id="BaseResultMap" type="com.gangdian.qc.model.QCCheckRecord">
    <result column="QCCheckProjectID" jdbcType="NVARCHAR" property="qccheckprojectid" />
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="parent_id" jdbcType="INTEGER" property="parentId" />
    <result column="insertDate" jdbcType="TIMESTAMP" property="insertdate" />
  </resultMap>
  
   <sql id="Base_Column_List" >
    QCCheckProjectID,id, parent_id, insertDate
  </sql>
  <insert id="insert" parameterType="com.gangdian.qc.model.QCCheckRecord">
    insert into QCCheckRecord (QCCheckProjectID, id, parent_id, 
      insertDate)
    values (#{qccheckprojectid,jdbcType=NVARCHAR}, #{id,jdbcType=INTEGER}, #{parentId,jdbcType=INTEGER}, 
      #{insertdate,jdbcType=TIMESTAMP})
     
  </insert>
  <insert id="insertSelective" parameterType="com.gangdian.qc.model.QCCheckRecord"
            useGeneratedKeys="true" keyProperty="id">
    insert into QCCheckRecord
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="qccheckprojectid != null">
        QCCheckProjectID,
      </if>
      
      <if test="parentId != null">
        parent_id,
      </if>
    
        insertDate,
      
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="qccheckprojectid != null">
        #{qccheckprojectid,jdbcType=NVARCHAR},
      </if>
     
      <if test="parentId != null">
        #{parentId,jdbcType=INTEGER},
      </if>
       getdate()
      
    </trim>
  </insert>
  
  	<!-- 查询所有记录总数 -->
<select id="queryMaxId"   resultType="int">
	select max(id) from QCCheckRecord 
	    
</select>
<!-- 按parent_id查找对应的记录表 -->
<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from QCCheckRecord
    where id = #{parent_id,jdbcType=INTEGER}
  </select>
<!-- 按id删除对应的记录表 -->
<select id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete 
    from QCCheckRecord
    where id = #{id,jdbcType=INTEGER}
  </select>
  <!-- 查询当前产能 标准工时 以及所有产能  实际工时=人数*当前工作小时
  标准工时=标准工时*当前产能/3600=当前人数*当前产能/标准产能
  有订单结束时间 则用结束时间-去开始时间 得到 实际工时
  其中当前时间需要减去中午和下午休息时间-->
<select id="queryDateProduction" resultType="map">
<![CDATA[ 
  
   select COUNT(*) nowProduction ,p2.pono,p2.model,dept.name groupid 
   ,p3.pre_shipment_date,p3.order_number, 
    ( select count(*)
    from product_main  p1   left join QCCheckRecord  on parent_id=p1.id
    where p1.pono = p2.pono
    group by pono) allProduction,
    cast(round((1.00*sumWorker/(1.00*standardProduct))*COUNT(*),4)as numeric(10,2)) as standardHour
    ,sumWorker*(cast(round(avg( case when DATEPART(hour,GETDATE())<12        
    then  1.00*DateDiff(ss,productTime,( case when endTime is null then GETDATE() else endTime end))/3600  
    when  DATEPART(hour,GETDATE())>18  and    DATEPART(hour,productTime)<12   
    then  1.00*(DateDiff(ss,productTime,( case when endTime is null then GETDATE()  when  DATEPART(hour,endTime)<12 then endTime  when  DATEPART(hour,endTime)>18 then dateadd (ss,9000,endTime) else    DATEADD(mi,60,endTime)  end))-9000)/3600 
    when  DATEPART(hour,GETDATE())>18  and    DATEPART(hour,productTime)>12   and    DATEPART(hour,productTime)<18   then  1.00*(DateDiff(ss,productTime,( case when endTime is null then GETDATE()  when  DATEPART(hour,endTime)>18 then  dateadd (ss,3600,endTime) else endTime  end))-3600)/3600 
    when  DATEPART(hour,GETDATE())>12  and	  DATEPART(hour,GETDATE())<18     and    DATEPART(hour,productTime)<12  then  1.00*(DateDiff(ss,productTime,( case when endTime is null then GETDATE() when DATEPART(hour,endTime)>12 then endTime else  dateadd (ss,5400,endTime) end))-5400)/3600 
    when  DATEPART(hour,GETDATE())>18  and    DATEPART(hour,productTime)>18  then  1.00*(DateDiff(ss,productTime,( case when endTime is null then GETDATE() else endTime end)))/3600 
	else  1.00*(DateDiff(ss,productTime,( case when endTime is null then GETDATE() else endTime end)))/3600 
	end    ),4)as numeric(10,2))) as nowHour,sumWorker
    from product_main p2 left join QCCheckRecord on parent_id=p2.id 
    left join qc_plan_production p3 on p2.pono=p3.pono
    left join department dept on p2.groupid=dept.id
    where productDate = convert(varchar,getdate(),23)
     and QCCheckProjectID='P01'
    ]]>
    <if test="belongid!=null">and dept.belong=#{belongid,jdbcType=INTEGER}</if>   
    group by p2.pono,p2.model,dept.name ,sumWorker,standardProduct,sumWorker,p3.pre_shipment_date,p3.order_number
    order by groupid  
</select>  
  <!-- 根据父id查询qc检测信息良品不良品合计 -->
<select id="querySumRecord" resultType="map" parameterType="java.lang.Integer" >
  select sum(case when QCCheckProjectID='P01' THEN 1 ELSE 0 END) as goodNum,
  sum(case when QCCheckProjectID='P01' and  QCCheckProjectID is not null THEN 0 ELSE 1 END)as  badNum from QCCheckRecord  
  where 1=1
  and parent_id=#{parent_id,jdbcType=INTEGER}
  </select>

  <!-- 查询当天所在组别所有产能 关联一个 QCCheckProjectTemp 防止数据缺失 小时数算了相应的边缘值+ 
 8点的边缘 12点的边缘 1：30的边缘 5:30的边缘 6:30的边缘 
  最后一个小时 加了两个小时-->
<select id="queryReportRecord" resultType="map" >
<![CDATA[ 
  	select  a.QCCheckProjectID,
 isNull(one,0) one,isNull(two,0) two,isnull(three,0)three,
 isNull(four,0) four,isNull(five,0) five,isNull(six,0) six,isNull(seven,0) seven,
 isNull(eight,0) eight,isNull(nine,0) nine,isNull(ten,0) ten,isNull(eleven,0)  eleven ,isNull(h12,0)  h12 ,isNull(allNum,0) allNum from  QCCheckProjectTemp a left join( 
	select  case when  QCCheckProjectID='P01' then '良品'  else  '不良品' end qcid , 
	  sum(case when DATEDIFF(ss,pm.productDate,cr.insertDate) between s1 and e1 then 1 else 0 end) as one,
	  sum(case when DATEDIFF(ss,pm.productDate,cr.insertDate) between s2 and e2 then 1 else 0 end) as two,
	  sum(case when DATEDIFF(ss,pm.productDate,cr.insertDate) between s3 and e3 then 1 else 0 end) as three,
	  sum(case when DATEDIFF(ss,pm.productDate,cr.insertDate) between s4 and e4 then 1 else 0 end) as four,
	  sum(case when DATEDIFF(ss,pm.productDate,cr.insertDate) between s5 and e5 then 1 else 0 end) as five,
	  sum(case when DATEDIFF(ss,pm.productDate,cr.insertDate) between s6 and e6 then 1 else 0 end) as six,
	  sum(case when DATEDIFF(ss,pm.productDate,cr.insertDate) between s7 and e7 then 1 else 0 end) as seven,
	  sum(case when DATEDIFF(ss,pm.productDate,cr.insertDate) between s8 and e8 then 1 else 0 end) as eight,
	  sum(case when DATEDIFF(ss,pm.productDate,cr.insertDate) between s9 and e9 then 1 else 0 end) as nine,
	  sum(case when DATEDIFF(ss,pm.productDate,cr.insertDate) between s10 and e10 then 1 else 0 end) as ten,
	  sum(case when DATEDIFF(ss,pm.productDate,cr.insertDate) between s11 and e11 then 1 else 0 end) as eleven,
	  sum(case when DATEDIFF(ss,pm.productDate,cr.insertDate) between s12 and e12 then 1 else 0 end) as h12,
	   COUNT(*) allNum
	   from   QCCheckRecord cr  inner join product_main pm on pm.id=parent_id
	   left join qc_worktime wt on pm.groupid=wt.groupid 
]]> 
	 where  pm.productDate =convert(varchar,getdate(),23)
	  and  pm.groupid=#{groupid,jdbcType=INTEGER}
	  <if test="progress!=null and progress !=''">and pm.progress=#{progress,jdbcType=INTEGER}</if>		  
	  <if test="id!=null and id !=''">and pm.id=#{id,jdbcType=INTEGER}</if>		  
	 group by case when  QCCheckProjectID='P01' then '良品' else  '不良品' end )as b  on a.QCCheckProjectID=b.qcid 
	  order by QCCheckProjectID
 
  </select>
  
  <select id="dateReport2" resultType="map"  >
  <![CDATA[ 
    select  a.QCCheckProjectID,
 isNull(one,0) one,isNull(two,0) two,isnull(three,0)three,
 isNull(four,0) four,isNull(five,0) five,isNull(six,0) six,isNull(seven,0) seven,
 isNull(eight,0) eight,isNull(nine,0) nine,isNull(ten,0) ten,isNull(eleven,0)  eleven , isNull(allNum,0) allNum from  QCCheckProjectTemp a left join( 
    select  case when  qcid='P01' then '良品'  else  '不良品' end qcid , 
      sum(case when DATEDIFF(ss,pm.productDate,cr.dbtime) between s1 and e1 then 1 else 0 end) as one,
      sum(case when DATEDIFF(ss,pm.productDate,cr.dbtime) between s2 and e2 then 1 else 0 end) as two,
      sum(case when DATEDIFF(ss,pm.productDate,cr.dbtime) between s3 and e3 then 1 else 0 end) as three,
      sum(case when DATEDIFF(ss,pm.productDate,cr.dbtime) between s4 and e4 then 1 else 0 end) as four,
      sum(case when DATEDIFF(ss,pm.productDate,cr.dbtime) between s5 and e5 then 1 else 0 end) as five,
      sum(case when DATEDIFF(ss,pm.productDate,cr.dbtime) between s6 and e6 then 1 else 0 end) as six,
      sum(case when DATEDIFF(ss,pm.productDate,cr.dbtime) between s7 and e7 then 1 else 0 end) as seven,
      sum(case when DATEDIFF(ss,pm.productDate,cr.dbtime) between s8 and e8 then 1 else 0 end) as eight,
      sum(case when DATEDIFF(ss,pm.productDate,cr.dbtime) between s9 and e9 then 1 else 0 end) as nine,
      sum(case when DATEDIFF(ss,pm.productDate,cr.dbtime) between s10 and e10 then 1 else 0 end) as ten,
      sum(case when DATEDIFF(ss,pm.productDate,cr.dbtime) between s11 and e11 then 1 else 0 end) as eleven,
       COUNT(*) allNum
       from   swipedata cr  inner join product_main pm on pm.groupid=cr.groupid
       left join qc_worktime wt on pm.groupid=wt.groupid
       ]]> 
       where swipedate=convert(varchar,getdate(),23)
       and  pm.productDate=convert(varchar,getdate(),23)
       and  pm.groupid=#{groupid,jdbcType=INTEGER}
       <if test="id!=null and id !=''">and pm.id=#{id,jdbcType=INTEGER}</if>
       and cr.position=6
        group by case when  qcid='P01' then '良品' else  '不良品' end  )as b  on a.QCCheckProjectID=b.qcid 
      order by QCCheckProjectID
       
  
  </select>
</mapper>